using System;
using System.Security.Cryptography;
using System.Text;

class Program
{
    static void Main()
    {
        try
        {
            // Генеруємо пару ключів
            using (RSA rsa = new RSACryptoServiceProvider())
            {
                // Отримуємо публічний та приватний ключі
                string publicKey = rsa.ToXmlString(false);
                string privateKey = rsa.ToXmlString(true);

                Console.WriteLine("Public Key:");
                Console.WriteLine(publicKey);
                Console.WriteLine("Private Key:");
                Console.WriteLine(privateKey);

                // Вхідні дані для шифрування
                Console.Write("Enter data to encrypt: ");
                string inputData = Console.ReadLine();

                // Шифруємо дані за допомогою публічного ключа
                string encryptedData = EncryptData(inputData, publicKey);
                Console.WriteLine($"Encrypted Data: {encryptedData}");

                // Розшифровуємо дані за допомогою приватного ключа
                string decryptedData = DecryptData(encryptedData, privateKey);
                Console.WriteLine($"Decrypted Data: {decryptedData}");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"An error occurred: {ex.Message}");
        }
    }

    static string EncryptData(string data, string publicKey)
    {
        using (RSACryptoServiceProvider rsa = new RSACryptoServiceProvider())
        {
            rsa.FromXmlString(publicKey);
            byte[] dataBytes = Encoding.UTF8.GetBytes(data);
            byte[] encryptedBytes = rsa.Encrypt(dataBytes, false);
            return Convert.ToBase64String(encryptedBytes);
        }
    }

    static string DecryptData(string encryptedData, string privateKey)
    {
        using (RSACryptoServiceProvider rsa = new RSACryptoServiceProvider())
        {
            rsa.FromXmlString(privateKey);
            byte[] encryptedBytes = Convert.FromBase64String(encryptedData);
            byte[] decryptedBytes = rsa.Decrypt(encryptedBytes, false);
            return Encoding.UTF8.GetString(decryptedBytes);
        }
    }
}
